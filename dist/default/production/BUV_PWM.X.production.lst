

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Aug 02 00:30:46 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 29/04/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC10F322 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0020                     	;# 
    86  0020                     	;# 
    87  0021                     	;# 
    88  0022                     	;# 
    89  0022                     	;# 
    90  0023                     	;# 
    91  0024                     	;# 
    92  0025                     	;# 
    93  0026                     	;# 
    94  0027                     	;# 
    95  0027                     	;# 
    96  0028                     	;# 
    97  0029                     	;# 
    98  002A                     	;# 
    99  002A                     	;# 
   100  002B                     	;# 
   101  002C                     	;# 
   102  002D                     	;# 
   103  002E                     	;# 
   104  0030                     	;# 
   105  0031                     	;# 
   106  0032                     	;# 
   107  0033                     	;# 
   108  0034                     	;# 
   109  0035                     	;# 
   110  0036                     	;# 
   111  0037                     	;# 
   112  0038                     	;# 
   113  0039                     	;# 
   114  003A                     	;# 
   115  003B                     	;# 
   116  003C                     	;# 
   117  003D                     	;# 
   118  003E                     	;# 
   119  003F                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0020                     	;# 
   155  0020                     	;# 
   156  0021                     	;# 
   157  0022                     	;# 
   158  0022                     	;# 
   159  0023                     	;# 
   160  0024                     	;# 
   161  0025                     	;# 
   162  0026                     	;# 
   163  0027                     	;# 
   164  0027                     	;# 
   165  0028                     	;# 
   166  0029                     	;# 
   167  002A                     	;# 
   168  002A                     	;# 
   169  002B                     	;# 
   170  002C                     	;# 
   171  002D                     	;# 
   172  002E                     	;# 
   173  0030                     	;# 
   174  0031                     	;# 
   175  0032                     	;# 
   176  0033                     	;# 
   177  0034                     	;# 
   178  0035                     	;# 
   179  0036                     	;# 
   180  0037                     	;# 
   181  0038                     	;# 
   182  0039                     	;# 
   183  003A                     	;# 
   184  003B                     	;# 
   185  003C                     	;# 
   186  003D                     	;# 
   187  003E                     	;# 
   188  003F                     	;# 
   189                           
   190                           	psect	idataBANK0
   191  00BD                     __pidataBANK0:
   192                           
   193                           ;initializer for _PWM_set
   194  00BD  3419               	retlw	25
   195                           
   196                           ;initializer for _PWM_high
   197  00BE  3419               	retlw	25
   198                           
   199                           ;initializer for _PWM_period
   200  00BF  3419               	retlw	25
   201  0013                     _T2CON	set	19
   202  0012                     _PR2	set	18
   203  0009                     _WPUA	set	9
   204  0008                     _ANSELA	set	8
   205  0006                     _TRISA	set	6
   206  0005                     _PORTA	set	5
   207  0010                     _OSCCON	set	16
   208  0069                     _TMR2IE	set	105
   209  005E                     _PEIE	set	94
   210  0061                     _TMR2IF	set	97
   211  002A                     _RA2	set	42
   212  0028                     _RA0	set	40
   213  0029                     _RA1	set	41
   214  002B                     _RA3	set	43
   215  005F                     _GIE	set	95
   216                           
   217                           	psect	cinit
   218  000D                     start_initialization:	
   219                           ; #config settings
   220                           
   221  000D                     __initialization:
   222                           
   223                           ; Initialize objects allocated to BANK0
   224  000D  20BD               	fcall	__pidataBANK0	;fetch initializer
   225  000E  00CB               	movwf	__pdataBANK0& (0+127)
   226  000F  20BE               	fcall	__pidataBANK0+1	;fetch initializer
   227  0010  00CC               	movwf	(__pdataBANK0+1)& (0+127)
   228  0011  20BF               	fcall	__pidataBANK0+2	;fetch initializer
   229  0012  00CD               	movwf	(__pdataBANK0+2)& (0+127)
   230                           
   231                           ; Clear objects allocated to BANK0
   232  0013  01C6               	clrf	__pbssBANK0& (0+127)
   233  0014  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   234  0015  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   235  0016  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   236  0017  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   237  0018                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240  0018                     __end_of__initialization:
   241  0018  0183               	clrf	3
   242  0019  281A               	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssBANK0
   245  0046                     __pbssBANK0:
   246  0046                     _NoCommandCounter:
   247  0046                     	ds	2
   248  0048                     _time_counter:
   249  0048                     	ds	2
   250  004A                     _PWM_counter:
   251  004A                     	ds	1
   252                           
   253                           	psect	dataBANK0
   254  004B                     __pdataBANK0:
   255  004B                     _PWM_set:
   256  004B                     	ds	1
   257  004C                     _PWM_high:
   258  004C                     	ds	1
   259  004D                     _PWM_period:
   260  004D                     	ds	1
   261                           
   262                           	psect	cstackCOMMON
   263  0000                     __pcstackCOMMON:
   264  0000                     ??_init:
   265                           
   266                           	psect	cstackBANK0
   267  0040                     __pcstackBANK0:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0040                     ?_init:
   271  0040                     ?_main:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0040                     ?_tmr2Int:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0040                     ??_tmr2Int:	
   278                           ; 1 bytes @ 0x0
   279                           
   280                           
   281                           ; 1 bytes @ 0x0
   282  0040                     	ds	3
   283  0043                     ??_main:
   284                           
   285                           ; 1 bytes @ 0x3
   286  0043                     	ds	3
   287                           
   288                           	psect	maintext
   289  001A                     __pmaintext:	
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 28 in file "main.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;		None
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : B00/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMMON   BANK0
   309 ;;      Params:         0       0
   310 ;;      Locals:         0       0
   311 ;;      Temps:          0       3
   312 ;;      Totals:         0       3
   313 ;;Total ram usage:        3 bytes
   314 ;; Hardware stack levels required when called:    2
   315 ;; This function calls:
   316 ;;		_init
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           
   323                           ;psect for function _main
   324  001A                     _main:
   325  001A                     l673:	
   326                           ;incstack = 0
   327                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   328                           
   329                           
   330                           ;main.c: 30:     init();
   331  001A  20AF               	fcall	_init
   332  001B                     l675:
   333                           
   334                           ;main.c: 31:     GIE = 1;
   335  001B  178B               	bsf	11,7	;volatile
   336  001C                     l677:
   337                           
   338                           ;main.c: 34:     {;main.c: 46:         _delay((unsigned long)((500)*(8000000/4000000.0))
      +                          );
   339  001C  30C7               	movlw	199
   340  001D  00C3               	movwf	??_main
   341  001E                     u237:
   342  001E  281F               	nop2
   343  001F  0BC3               	decfsz	??_main,f
   344  0020  281E               	goto	u237
   345  0021  2822               	nop2
   346  0022  2823               	nop2
   347  0023                     l679:
   348                           
   349                           ;main.c: 48:         if(PWM_high<PWM_set)
   350  0023  084B               	movf	_PWM_set,w
   351  0024  024C               	subwf	_PWM_high,w
   352  0025  1803               	skipnc
   353  0026  2828               	goto	u121
   354  0027  2829               	goto	u120
   355  0028                     u121:
   356  0028  283A               	goto	l685
   357  0029                     u120:
   358  0029                     l681:
   359                           
   360                           ;main.c: 49:         {;main.c: 50:             _delay((unsigned long)((500)*(8000000/400
      +                          0.0)));
   361  0029  3006               	movlw	6
   362  002A  00C5               	movwf	??_main+2
   363  002B  3013               	movlw	19
   364  002C  00C4               	movwf	??_main+1
   365  002D  30AD               	movlw	173
   366  002E  00C3               	movwf	??_main
   367  002F                     u247:
   368  002F  0BC3               	decfsz	??_main,f
   369  0030  282F               	goto	u247
   370  0031  0BC4               	decfsz	??_main+1,f
   371  0032  282F               	goto	u247
   372  0033  0BC5               	decfsz	??_main+2,f
   373  0034  282F               	goto	u247
   374  0035  2836               	nop2
   375  0036                     l683:
   376                           
   377                           ;main.c: 51:             PWM_high++;
   378  0036  3001               	movlw	1
   379  0037  00FF               	movwf	btemp+1
   380  0038  087F               	movf	btemp+1,w
   381  0039  07CC               	addwf	_PWM_high,f
   382  003A                     l685:
   383                           
   384                           ;main.c: 54:         if(PWM_high>PWM_set)
   385  003A  084C               	movf	_PWM_high,w
   386  003B  024B               	subwf	_PWM_set,w
   387  003C  1803               	skipnc
   388  003D  283F               	goto	u131
   389  003E  2840               	goto	u130
   390  003F                     u131:
   391  003F  284F               	goto	l691
   392  0040                     u130:
   393  0040                     l687:
   394                           
   395                           ;main.c: 55:         {;main.c: 56:             _delay((unsigned long)((500)*(8000000/400
      +                          0.0)));
   396  0040  3006               	movlw	6
   397  0041  00C5               	movwf	??_main+2
   398  0042  3013               	movlw	19
   399  0043  00C4               	movwf	??_main+1
   400  0044  30AD               	movlw	173
   401  0045  00C3               	movwf	??_main
   402  0046                     u257:
   403  0046  0BC3               	decfsz	??_main,f
   404  0047  2846               	goto	u257
   405  0048  0BC4               	decfsz	??_main+1,f
   406  0049  2846               	goto	u257
   407  004A  0BC5               	decfsz	??_main+2,f
   408  004B  2846               	goto	u257
   409  004C  284D               	nop2
   410  004D                     l689:
   411                           
   412                           ;main.c: 57:             PWM_high--;
   413  004D  3001               	movlw	1
   414  004E  02CC               	subwf	_PWM_high,f
   415  004F                     l691:
   416                           
   417                           ;main.c: 61:         if (RA3 == 0) {
   418  004F  1985               	btfsc	5,3	;volatile
   419  0050  2852               	goto	u141
   420  0051  2853               	goto	u140
   421  0052                     u141:
   422  0052  2859               	goto	l697
   423  0053                     u140:
   424  0053                     l693:
   425                           
   426                           ;main.c: 62:             PWM_set = 12;
   427  0053  300C               	movlw	12
   428  0054  00FF               	movwf	btemp+1
   429  0055  087F               	movf	btemp+1,w
   430  0056  00CB               	movwf	_PWM_set
   431  0057                     l695:
   432                           
   433                           ;main.c: 63:             NoCommandCounter = 0;
   434  0057  01C6               	clrf	_NoCommandCounter
   435  0058  01C7               	clrf	_NoCommandCounter+1
   436  0059                     l697:
   437                           
   438                           ;main.c: 66:         if (RA1 == 0) {
   439  0059  1885               	btfsc	5,1	;volatile
   440  005A  285C               	goto	u151
   441  005B  285D               	goto	u150
   442  005C                     u151:
   443  005C  2863               	goto	l703
   444  005D                     u150:
   445  005D                     l699:
   446                           
   447                           ;main.c: 67:             PWM_set = 8;
   448  005D  3008               	movlw	8
   449  005E  00FF               	movwf	btemp+1
   450  005F  087F               	movf	btemp+1,w
   451  0060  00CB               	movwf	_PWM_set
   452  0061                     l701:
   453                           
   454                           ;main.c: 68:             NoCommandCounter = 0;
   455  0061  01C6               	clrf	_NoCommandCounter
   456  0062  01C7               	clrf	_NoCommandCounter+1
   457  0063                     l703:
   458                           
   459                           ;main.c: 71:         if (RA0 == 0) {
   460  0063  1805               	btfsc	5,0	;volatile
   461  0064  2866               	goto	u161
   462  0065  2867               	goto	u160
   463  0066                     u161:
   464  0066  286D               	goto	l709
   465  0067                     u160:
   466  0067                     l705:
   467                           
   468                           ;main.c: 72:             PWM_set = 3;
   469  0067  3003               	movlw	3
   470  0068  00FF               	movwf	btemp+1
   471  0069  087F               	movf	btemp+1,w
   472  006A  00CB               	movwf	_PWM_set
   473  006B                     l707:
   474                           
   475                           ;main.c: 73:             NoCommandCounter = 0;
   476  006B  01C6               	clrf	_NoCommandCounter
   477  006C  01C7               	clrf	_NoCommandCounter+1
   478  006D                     l709:
   479                           
   480                           ;main.c: 77:         if ((RA3==1)&&(RA1==1)&&(RA0==1))
   481  006D  1D85               	btfss	5,3	;volatile
   482  006E  2870               	goto	u171
   483  006F  2871               	goto	u170
   484  0070                     u171:
   485  0070  281C               	goto	l677
   486  0071                     u170:
   487  0071                     l711:
   488  0071  1C85               	btfss	5,1	;volatile
   489  0072  2874               	goto	u181
   490  0073  2875               	goto	u180
   491  0074                     u181:
   492  0074  281C               	goto	l677
   493  0075                     u180:
   494  0075                     l713:
   495  0075  1C05               	btfss	5,0	;volatile
   496  0076  2878               	goto	u191
   497  0077  2879               	goto	u190
   498  0078                     u191:
   499  0078  281C               	goto	l677
   500  0079                     u190:
   501  0079                     l715:
   502                           
   503                           ;main.c: 78:         {;main.c: 79:             NoCommandCounter++;
   504  0079  3001               	movlw	1
   505  007A  07C6               	addwf	_NoCommandCounter,f
   506  007B  1803               	skipnc
   507  007C  0AC7               	incf	_NoCommandCounter+1,f
   508  007D  3000               	movlw	0
   509  007E  07C7               	addwf	_NoCommandCounter+1,f
   510                           
   511                           ;main.c: 80:             if (NoCommandCounter>=1000)
   512  007F  3003               	movlw	3
   513  0080  0247               	subwf	_NoCommandCounter+1,w
   514  0081  30E8               	movlw	232
   515  0082  1903               	skipnz
   516  0083  0246               	subwf	_NoCommandCounter,w
   517  0084  1C03               	skipc
   518  0085  2887               	goto	u201
   519  0086  2888               	goto	u200
   520  0087                     u201:
   521  0087  281C               	goto	l677
   522  0088                     u200:
   523  0088                     l717:
   524                           
   525                           ;main.c: 81:             {;main.c: 82:                 PWM_set = PWM_period;
   526  0088  084D               	movf	_PWM_period,w
   527  0089  00FF               	movwf	btemp+1
   528  008A  087F               	movf	btemp+1,w
   529  008B  00CB               	movwf	_PWM_set
   530  008C                     l719:
   531                           
   532                           ;main.c: 83:                 NoCommandCounter=1000;
   533  008C  30E8               	movlw	232
   534  008D  00C6               	movwf	_NoCommandCounter
   535  008E  3003               	movlw	3
   536  008F  00C7               	movwf	_NoCommandCounter+1
   537  0090  281C               	goto	l677
   538  0091  280C               	ljmp	start
   539  0092                     __end_of_main:
   540                           
   541                           	psect	text1
   542  00AF                     __ptext1:	
   543 ;; *************** function _init *****************
   544 ;; Defined at:
   545 ;;		line 13 in file "functions.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0
   559 ;;      Params:         0       0
   560 ;;      Locals:         0       0
   561 ;;      Temps:          0       0
   562 ;;      Totals:         0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; Hardware stack levels required when called:    1
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           
   574                           ;psect for function _init
   575  00AF                     _init:
   576  00AF                     l657:	
   577                           ;incstack = 0
   578                           ; Regs used in _init: [wreg+status,2]
   579                           
   580                           
   581                           ;functions.c: 16:     OSCCON=0b01100000;
   582  00AF  3060               	movlw	96
   583  00B0  0090               	movwf	16	;volatile
   584  00B1                     l659:
   585                           
   586                           ;functions.c: 19:     PORTA=0;
   587  00B1  0185               	clrf	5	;volatile
   588  00B2                     l661:
   589                           
   590                           ;functions.c: 20:     TRISA=0b00001011;
   591  00B2  300B               	movlw	11
   592  00B3  0086               	movwf	6	;volatile
   593                           
   594                           ;functions.c: 21:     ANSELA=0;
   595  00B4  0188               	clrf	8	;volatile
   596                           
   597                           ;functions.c: 22:     WPUA=0;
   598  00B5  0189               	clrf	9	;volatile
   599  00B6                     l663:
   600                           
   601                           ;functions.c: 25:     PR2=50;
   602  00B6  3032               	movlw	50
   603  00B7  0092               	movwf	18	;volatile
   604  00B8                     l665:
   605                           
   606                           ;functions.c: 26:     T2CON=0b00000100;
   607  00B8  3004               	movlw	4
   608  00B9  0093               	movwf	19	;volatile
   609  00BA                     l667:
   610                           
   611                           ;functions.c: 29:     PEIE=1;
   612  00BA  170B               	bsf	11,6	;volatile
   613  00BB                     l669:
   614                           
   615                           ;functions.c: 30:     TMR2IE=1;
   616  00BB  148D               	bsf	13,1	;volatile
   617  00BC                     l71:
   618  00BC  0008               	return
   619  00BD                     __end_of_init:
   620                           
   621                           	psect	text2
   622  0092                     __ptext2:	
   623 ;; *************** function _tmr2Int *****************
   624 ;; Defined at:
   625 ;;		line 93 in file "main.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0, btemp+1
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0
   639 ;;      Params:         0       0
   640 ;;      Locals:         0       0
   641 ;;      Temps:          0       3
   642 ;;      Totals:         0       3
   643 ;;Total ram usage:        3 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		Interrupt level 1
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _tmr2Int
   654  0092                     _tmr2Int:
   655  0092                     i1l721:
   656                           
   657                           ;main.c: 95:     PWM_counter++;
   658  0092  3001               	movlw	1
   659  0093  00FF               	movwf	btemp+1
   660  0094  087F               	movf	btemp+1,w
   661  0095  07CA               	addwf	_PWM_counter,f
   662  0096                     i1l723:
   663                           
   664                           ;main.c: 97:     if(PWM_counter>=PWM_period)
   665  0096  084D               	movf	_PWM_period,w
   666  0097  024A               	subwf	_PWM_counter,w
   667  0098  1C03               	skipc
   668  0099  289B               	goto	u21_21
   669  009A  289C               	goto	u21_20
   670  009B                     u21_21:
   671  009B  289E               	goto	i1l729
   672  009C                     u21_20:
   673  009C                     i1l725:
   674                           
   675                           ;main.c: 98:     {;main.c: 99:         RA2=1;
   676  009C  1505               	bsf	5,2	;volatile
   677  009D                     i1l727:
   678                           
   679                           ;main.c: 100:         PWM_counter=0;
   680  009D  01CA               	clrf	_PWM_counter
   681  009E                     i1l729:
   682                           
   683                           ;main.c: 103:     if(PWM_counter>=PWM_high)
   684  009E  084C               	movf	_PWM_high,w
   685  009F  024A               	subwf	_PWM_counter,w
   686  00A0  1C03               	skipc
   687  00A1  28A3               	goto	u22_21
   688  00A2  28A4               	goto	u22_20
   689  00A3                     u22_21:
   690  00A3  28A5               	goto	i1l49
   691  00A4                     u22_20:
   692  00A4                     i1l731:
   693                           
   694                           ;main.c: 104:     {;main.c: 105:         RA2=0;
   695  00A4  1105               	bcf	5,2	;volatile
   696  00A5                     i1l49:	
   697                           ;main.c: 106:     }
   698                           
   699                           
   700                           ;main.c: 108:     TMR2IF=0;
   701  00A5  108C               	bcf	12,1	;volatile
   702  00A6                     i1l50:	
   703                           ;main.c: 109:     return;
   704                           
   705  00A6  0842               	movf	??_tmr2Int+2,w
   706  00A7  00FF               	movwf	btemp+1
   707  00A8  0841               	movf	??_tmr2Int+1,w
   708  00A9  008A               	movwf	10
   709  00AA  0E40               	swapf	??_tmr2Int^0,w
   710  00AB  0083               	movwf	3
   711  00AC  0EFE               	swapf	btemp,f
   712  00AD  0E7E               	swapf	btemp,w
   713  00AE  0009               	retfie
   714  00AF                     __end_of_tmr2Int:
   715  007E                     btemp	set	126	;btemp
   716  007E                     wtemp0	set	126
   717                           
   718                           	psect	intentry
   719  0004                     __pintentry:	
   720                           ;incstack = 0
   721                           ; Regs used in _tmr2Int: [wreg+status,2+status,0+btemp+1]
   722                           
   723  0004                     interrupt_function:
   724  007E                     saved_w	set	btemp
   725  0004  00FE               	movwf	btemp
   726  0005  0E03               	swapf	3,w
   727  0006  00C0               	movwf	??_tmr2Int
   728  0007  080A               	movf	10,w
   729  0008  00C1               	movwf	??_tmr2Int+1
   730  0009  087F               	movf	btemp+1,w
   731  000A  00C2               	movwf	??_tmr2Int+2
   732  000B  2892               	ljmp	_tmr2Int
   733                           
   734                           	psect	config
   735                           
   736                           ;Config register CONFIG @ 0x2007
   737                           ;	Oscillator Selection bits
   738                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
   739                           ;	Brown-out Reset Enable
   740                           ;	BOREN = ON, Brown-out Reset enabled
   741                           ;	Watchdog Timer Enable
   742                           ;	WDTE = OFF, WDT disabled
   743                           ;	Power-up Timer Enable bit
   744                           ;	PWRTE = ON, PWRT enabled
   745                           ;	MCLR Pin Function Select bit
   746                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   747                           ;	Code Protection bit
   748                           ;	CP = ON, Program memory code protection is enabled
   749                           ;	Low-Voltage Programming Enable
   750                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   751                           ;	Brown-out Reset Selection bits
   752                           ;	LPBOR = ON, BOR enabled
   753                           ;	Brown-out Reset Voltage Selection
   754                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
   755                           ;	Flash Memory Self-Write Protection
   756                           ;	WRT = ALL, 000h to 1FFh write protected, no addresses may be modified by PMCON control
   757  2007                     	org	8199
   758  2007  2206               	dw	8710

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _tmr2Int in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _tmr2Int in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 BANK0      3     3      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _tmr2Int                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _tmr2Int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK0               3E      6       E       3       22.6%
BITBANK0            3E      0       0       6        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E       5        0.0%
ABS                  0      0       E       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Aug 02 00:30:46 2021

                     l71 00BC                      l701 0061                      l711 0071  
                    l703 0063                      l713 0075                      l705 0067  
                    l715 0079                      l707 006B                      l661 00B2  
                    l717 0088                      l709 006D                      l663 00B6  
                    l719 008C                      l665 00B8                      l657 00AF  
                    l681 0029                      l673 001A                      l667 00BA  
                    l659 00B1                      l691 004F                      l683 0036  
                    l675 001B                      l669 00BB                      l693 0053  
                    l685 003A                      l677 001C                      l695 0057  
                    l687 0040                      l679 0023                      l697 0059  
                    l689 004D                      l699 005D                      _GIE 005F  
                    _RA0 0028                      _RA1 0029                      _RA2 002A  
                    _RA3 002B                      u200 0088                      u120 0029  
                    u201 0087                      u121 0028                      u130 0040  
                    u131 003F                      u140 0053                      u141 0052  
                    u150 005D                      u151 005C                      u160 0067  
                    u161 0066                      u170 0071                      u171 0070  
                    u180 0075                      u181 0074                      u237 001E  
                    u190 0079                      _PR2 0012                      u191 0078  
                    u247 002F                      u257 0046               _PWM_period 004D  
                   _PEIE 005E                     i1l50 00A6                     i1l49 00A5  
       _NoCommandCounter 0046                     _WPUA 0009                     _main 001A  
                   _init 00AF                     btemp 007E              _PWM_counter 004A  
                   start 000C                    ?_main 0040                    ?_init 0040  
                  _T2CON 0013                    i1l721 0092                    i1l731 00A4  
                  i1l723 0096                    i1l725 009C                    i1l727 009D  
                  i1l729 009E                    u21_20 009C                    u21_21 009B  
                  u22_20 00A4                    u22_21 00A3                    _PORTA 0005  
                  _TRISA 0006          __end_of_tmr2Int 00AF                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 0092             __end_of_init 00BD                   ??_main 0043  
                 ??_init 0000                   _ANSELA 0008                   _OSCCON 0010  
                 _TMR2IE 0069                   _TMR2IF 0061                ??_tmr2Int 0040  
                 saved_w 007E  __end_of__initialization 0018           __pcstackCOMMON 0000  
           __pidataBANK0 00BD               __pbssBANK0 0046               __pmaintext 001A  
             __pintentry 0004                  _PWM_set 004B                  __ptext1 00AF  
                __ptext2 0092                  _tmr2Int 0092     end_of_initialization 0018  
    start_initialization 000D              __pdataBANK0 004B                ___latbits 0000  
          __pcstackBANK0 0040                 ?_tmr2Int 0040        interrupt_function 0004  
               _PWM_high 004C         __size_of_tmr2Int 001D            __size_of_main 0078  
          __size_of_init 000E             _time_counter 0048                 intlevel1 0000  
