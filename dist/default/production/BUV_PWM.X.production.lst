

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 01 11:01:31 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 29/04/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC10F322 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0020                     	;# 
    86  0020                     	;# 
    87  0021                     	;# 
    88  0022                     	;# 
    89  0022                     	;# 
    90  0023                     	;# 
    91  0024                     	;# 
    92  0025                     	;# 
    93  0026                     	;# 
    94  0027                     	;# 
    95  0027                     	;# 
    96  0028                     	;# 
    97  0029                     	;# 
    98  002A                     	;# 
    99  002A                     	;# 
   100  002B                     	;# 
   101  002C                     	;# 
   102  002D                     	;# 
   103  002E                     	;# 
   104  0030                     	;# 
   105  0031                     	;# 
   106  0032                     	;# 
   107  0033                     	;# 
   108  0034                     	;# 
   109  0035                     	;# 
   110  0036                     	;# 
   111  0037                     	;# 
   112  0038                     	;# 
   113  0039                     	;# 
   114  003A                     	;# 
   115  003B                     	;# 
   116  003C                     	;# 
   117  003D                     	;# 
   118  003E                     	;# 
   119  003F                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0020                     	;# 
   155  0020                     	;# 
   156  0021                     	;# 
   157  0022                     	;# 
   158  0022                     	;# 
   159  0023                     	;# 
   160  0024                     	;# 
   161  0025                     	;# 
   162  0026                     	;# 
   163  0027                     	;# 
   164  0027                     	;# 
   165  0028                     	;# 
   166  0029                     	;# 
   167  002A                     	;# 
   168  002A                     	;# 
   169  002B                     	;# 
   170  002C                     	;# 
   171  002D                     	;# 
   172  002E                     	;# 
   173  0030                     	;# 
   174  0031                     	;# 
   175  0032                     	;# 
   176  0033                     	;# 
   177  0034                     	;# 
   178  0035                     	;# 
   179  0036                     	;# 
   180  0037                     	;# 
   181  0038                     	;# 
   182  0039                     	;# 
   183  003A                     	;# 
   184  003B                     	;# 
   185  003C                     	;# 
   186  003D                     	;# 
   187  003E                     	;# 
   188  003F                     	;# 
   189                           
   190                           	psect	idataBANK0
   191  008B                     __pidataBANK0:
   192                           
   193                           ;initializer for _PWM_high
   194  008B  3409               	retlw	9
   195                           
   196                           ;initializer for _PWM_period
   197  008C  3419               	retlw	25
   198  0013                     _T2CON	set	19
   199  0012                     _PR2	set	18
   200  0009                     _WPUA	set	9
   201  0008                     _ANSELA	set	8
   202  0006                     _TRISA	set	6
   203  0005                     _PORTA	set	5
   204  0010                     _OSCCON	set	16
   205  0069                     _TMR2IE	set	105
   206  005E                     _PEIE	set	94
   207  0061                     _TMR2IF	set	97
   208  002A                     _RA2	set	42
   209  005F                     _GIE	set	95
   210                           
   211                           	psect	cinit
   212  000D                     start_initialization:	
   213                           ; #config settings
   214                           
   215  000D                     __initialization:
   216                           
   217                           ; Initialize objects allocated to BANK0
   218  000D  208B               	fcall	__pidataBANK0	;fetch initializer
   219  000E  00CB               	movwf	__pdataBANK0& (0+127)
   220  000F  208C               	fcall	__pidataBANK0+1	;fetch initializer
   221  0010  00CC               	movwf	(__pdataBANK0+1)& (0+127)
   222                           
   223                           ; Clear objects allocated to BANK0
   224  0011  01C6               	clrf	__pbssBANK0& (0+127)
   225  0012  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   226  0013  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   227  0014  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   228  0015  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   229  0016                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232  0016                     __end_of__initialization:
   233  0016  0183               	clrf	3
   234  0017  2818               	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bssBANK0
   237  0046                     __pbssBANK0:
   238  0046                     _NoCommandCounter:
   239  0046                     	ds	2
   240  0048                     _time_counter:
   241  0048                     	ds	2
   242  004A                     _PWM_counter:
   243  004A                     	ds	1
   244                           
   245                           	psect	dataBANK0
   246  004B                     __pdataBANK0:
   247  004B                     _PWM_high:
   248  004B                     	ds	1
   249  004C                     _PWM_period:
   250  004C                     	ds	1
   251                           
   252                           	psect	cstackCOMMON
   253  0000                     __pcstackCOMMON:
   254  0000                     ??_init:
   255                           
   256                           	psect	cstackBANK0
   257  0040                     __pcstackBANK0:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0040                     ?_init:
   261  0040                     ?_main:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0040                     ?_tmr2Int:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0040                     ??_tmr2Int:	
   268                           ; 1 bytes @ 0x0
   269                           
   270                           
   271                           ; 1 bytes @ 0x0
   272  0040                     	ds	3
   273  0043                     ??_main:
   274                           
   275                           ; 1 bytes @ 0x3
   276  0043                     	ds	3
   277                           
   278                           	psect	maintext
   279  0018                     __pmaintext:	
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 28 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : B00/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0
   299 ;;      Params:         0       0
   300 ;;      Locals:         0       0
   301 ;;      Temps:          0       3
   302 ;;      Totals:         0       3
   303 ;;Total ram usage:        3 bytes
   304 ;; Hardware stack levels required when called:    2
   305 ;; This function calls:
   306 ;;		_init
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           
   313                           ;psect for function _main
   314  0018                     _main:
   315  0018                     l630:	
   316                           ;incstack = 0
   317                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   318                           
   319                           
   320                           ;main.c: 30:     init();
   321  0018  207D               	fcall	_init
   322  0019                     l632:
   323                           
   324                           ;main.c: 31:     GIE = 1;
   325  0019  178B               	bsf	11,7	;volatile
   326  001A                     l634:
   327                           
   328                           ;main.c: 34:     {;main.c: 37:         PWM_high=3;
   329  001A  3003               	movlw	3
   330  001B  00FF               	movwf	btemp+1
   331  001C  087F               	movf	btemp+1,w
   332  001D  00CB               	movwf	_PWM_high
   333  001E                     l636:
   334                           
   335                           ;main.c: 38:         _delay((unsigned long)((3000)*(8000000/4000.0)));
   336  001E  301F               	movlw	31
   337  001F  00C5               	movwf	??_main+2
   338  0020  3071               	movlw	113
   339  0021  00C4               	movwf	??_main+1
   340  0022  301E               	movlw	30
   341  0023  00C3               	movwf	??_main
   342  0024                     u57:
   343  0024  0BC3               	decfsz	??_main,f
   344  0025  2824               	goto	u57
   345  0026  0BC4               	decfsz	??_main+1,f
   346  0027  2824               	goto	u57
   347  0028  0BC5               	decfsz	??_main+2,f
   348  0029  2824               	goto	u57
   349  002A  0000               	nop
   350  002B                     l638:
   351                           
   352                           ;main.c: 39:         PWM_high=8;
   353  002B  3008               	movlw	8
   354  002C  00FF               	movwf	btemp+1
   355  002D  087F               	movf	btemp+1,w
   356  002E  00CB               	movwf	_PWM_high
   357  002F                     l640:
   358                           
   359                           ;main.c: 40:         _delay((unsigned long)((3000)*(8000000/4000.0)));
   360  002F  301F               	movlw	31
   361  0030  00C5               	movwf	??_main+2
   362  0031  3071               	movlw	113
   363  0032  00C4               	movwf	??_main+1
   364  0033  301E               	movlw	30
   365  0034  00C3               	movwf	??_main
   366  0035                     u67:
   367  0035  0BC3               	decfsz	??_main,f
   368  0036  2835               	goto	u67
   369  0037  0BC4               	decfsz	??_main+1,f
   370  0038  2835               	goto	u67
   371  0039  0BC5               	decfsz	??_main+2,f
   372  003A  2835               	goto	u67
   373  003B  0000               	nop
   374  003C                     l642:
   375                           
   376                           ;main.c: 41:         PWM_high=12;
   377  003C  300C               	movlw	12
   378  003D  00FF               	movwf	btemp+1
   379  003E  087F               	movf	btemp+1,w
   380  003F  00CB               	movwf	_PWM_high
   381  0040                     l644:
   382                           
   383                           ;main.c: 42:         _delay((unsigned long)((3000)*(8000000/4000.0)));
   384  0040  301F               	movlw	31
   385  0041  00C5               	movwf	??_main+2
   386  0042  3071               	movlw	113
   387  0043  00C4               	movwf	??_main+1
   388  0044  301E               	movlw	30
   389  0045  00C3               	movwf	??_main
   390  0046                     u77:
   391  0046  0BC3               	decfsz	??_main,f
   392  0047  2846               	goto	u77
   393  0048  0BC4               	decfsz	??_main+1,f
   394  0049  2846               	goto	u77
   395  004A  0BC5               	decfsz	??_main+2,f
   396  004B  2846               	goto	u77
   397  004C  0000               	nop
   398  004D                     l646:
   399                           
   400                           ;main.c: 43:         PWM_high=25;
   401  004D  3019               	movlw	25
   402  004E  00FF               	movwf	btemp+1
   403  004F  087F               	movf	btemp+1,w
   404  0050  00CB               	movwf	_PWM_high
   405  0051                     l648:
   406                           
   407                           ;main.c: 44:         _delay((unsigned long)((3000)*(8000000/4000.0)));
   408  0051  301F               	movlw	31
   409  0052  00C5               	movwf	??_main+2
   410  0053  3071               	movlw	113
   411  0054  00C4               	movwf	??_main+1
   412  0055  301E               	movlw	30
   413  0056  00C3               	movwf	??_main
   414  0057                     u87:
   415  0057  0BC3               	decfsz	??_main,f
   416  0058  2857               	goto	u87
   417  0059  0BC4               	decfsz	??_main+1,f
   418  005A  2857               	goto	u87
   419  005B  0BC5               	decfsz	??_main+2,f
   420  005C  2857               	goto	u87
   421  005D  0000               	nop
   422  005E  281A               	goto	l634
   423  005F  280C               	ljmp	start
   424  0060                     __end_of_main:
   425                           
   426                           	psect	text1
   427  007D                     __ptext1:	
   428 ;; *************** function _init *****************
   429 ;; Defined at:
   430 ;;		line 13 in file "functions.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0
   444 ;;      Params:         0       0
   445 ;;      Locals:         0       0
   446 ;;      Temps:          0       0
   447 ;;      Totals:         0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; Hardware stack levels required when called:    1
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           
   459                           ;psect for function _init
   460  007D                     _init:
   461  007D                     l614:	
   462                           ;incstack = 0
   463                           ; Regs used in _init: [wreg+status,2]
   464                           
   465                           
   466                           ;functions.c: 16:     OSCCON=0b01100000;
   467  007D  3060               	movlw	96
   468  007E  0090               	movwf	16	;volatile
   469  007F                     l616:
   470                           
   471                           ;functions.c: 19:     PORTA=0;
   472  007F  0185               	clrf	5	;volatile
   473  0080                     l618:
   474                           
   475                           ;functions.c: 20:     TRISA=0b00001011;
   476  0080  300B               	movlw	11
   477  0081  0086               	movwf	6	;volatile
   478                           
   479                           ;functions.c: 21:     ANSELA=0;
   480  0082  0188               	clrf	8	;volatile
   481                           
   482                           ;functions.c: 22:     WPUA=0;
   483  0083  0189               	clrf	9	;volatile
   484  0084                     l620:
   485                           
   486                           ;functions.c: 25:     PR2=50;
   487  0084  3032               	movlw	50
   488  0085  0092               	movwf	18	;volatile
   489  0086                     l622:
   490                           
   491                           ;functions.c: 26:     T2CON=0b00000100;
   492  0086  3004               	movlw	4
   493  0087  0093               	movwf	19	;volatile
   494  0088                     l624:
   495                           
   496                           ;functions.c: 29:     PEIE=1;
   497  0088  170B               	bsf	11,6	;volatile
   498  0089                     l626:
   499                           
   500                           ;functions.c: 30:     TMR2IE=1;
   501  0089  148D               	bsf	13,1	;volatile
   502  008A                     l56:
   503  008A  0008               	return
   504  008B                     __end_of_init:
   505                           
   506                           	psect	text2
   507  0060                     __ptext2:	
   508 ;; *************** function _tmr2Int *****************
   509 ;; Defined at:
   510 ;;		line 81 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0, btemp+1
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0
   524 ;;      Params:         0       0
   525 ;;      Locals:         0       0
   526 ;;      Temps:          0       3
   527 ;;      Totals:         0       3
   528 ;;Total ram usage:        3 bytes
   529 ;; Hardware stack levels used:    1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		Interrupt level 1
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           
   538                           ;psect for function _tmr2Int
   539  0060                     _tmr2Int:
   540  0060                     i1l650:
   541                           
   542                           ;main.c: 83:     PWM_counter++;
   543  0060  3001               	movlw	1
   544  0061  00FF               	movwf	btemp+1
   545  0062  087F               	movf	btemp+1,w
   546  0063  07CA               	addwf	_PWM_counter,f
   547  0064                     i1l652:
   548                           
   549                           ;main.c: 85:     if(PWM_counter>=PWM_period)
   550  0064  084C               	movf	_PWM_period,w
   551  0065  024A               	subwf	_PWM_counter,w
   552  0066  1C03               	skipc
   553  0067  2869               	goto	u3_21
   554  0068  286A               	goto	u3_20
   555  0069                     u3_21:
   556  0069  286C               	goto	i1l658
   557  006A                     u3_20:
   558  006A                     i1l654:
   559                           
   560                           ;main.c: 86:     {;main.c: 87:         RA2=1;
   561  006A  1505               	bsf	5,2	;volatile
   562  006B                     i1l656:
   563                           
   564                           ;main.c: 88:         PWM_counter=0;
   565  006B  01CA               	clrf	_PWM_counter
   566  006C                     i1l658:
   567                           
   568                           ;main.c: 91:     if(PWM_counter>=PWM_high)
   569  006C  084B               	movf	_PWM_high,w
   570  006D  024A               	subwf	_PWM_counter,w
   571  006E  1C03               	skipc
   572  006F  2871               	goto	u4_21
   573  0070  2872               	goto	u4_20
   574  0071                     u4_21:
   575  0071  2873               	goto	i1l34
   576  0072                     u4_20:
   577  0072                     i1l660:
   578                           
   579                           ;main.c: 92:     {;main.c: 93:         RA2=0;
   580  0072  1105               	bcf	5,2	;volatile
   581  0073                     i1l34:	
   582                           ;main.c: 94:     }
   583                           
   584                           
   585                           ;main.c: 96:     TMR2IF=0;
   586  0073  108C               	bcf	12,1	;volatile
   587  0074                     i1l35:	
   588                           ;main.c: 97:     return;
   589                           
   590  0074  0842               	movf	??_tmr2Int+2,w
   591  0075  00FF               	movwf	btemp+1
   592  0076  0841               	movf	??_tmr2Int+1,w
   593  0077  008A               	movwf	10
   594  0078  0E40               	swapf	??_tmr2Int^0,w
   595  0079  0083               	movwf	3
   596  007A  0EFE               	swapf	btemp,f
   597  007B  0E7E               	swapf	btemp,w
   598  007C  0009               	retfie
   599  007D                     __end_of_tmr2Int:
   600  007E                     btemp	set	126	;btemp
   601  007E                     wtemp0	set	126
   602                           
   603                           	psect	intentry
   604  0004                     __pintentry:	
   605                           ;incstack = 0
   606                           ; Regs used in _tmr2Int: [wreg+status,2+status,0+btemp+1]
   607                           
   608  0004                     interrupt_function:
   609  007E                     saved_w	set	btemp
   610  0004  00FE               	movwf	btemp
   611  0005  0E03               	swapf	3,w
   612  0006  00C0               	movwf	??_tmr2Int
   613  0007  080A               	movf	10,w
   614  0008  00C1               	movwf	??_tmr2Int+1
   615  0009  087F               	movf	btemp+1,w
   616  000A  00C2               	movwf	??_tmr2Int+2
   617  000B  2860               	ljmp	_tmr2Int
   618                           
   619                           	psect	config
   620                           
   621                           ;Config register CONFIG @ 0x2007
   622                           ;	Oscillator Selection bits
   623                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
   624                           ;	Brown-out Reset Enable
   625                           ;	BOREN = ON, Brown-out Reset enabled
   626                           ;	Watchdog Timer Enable
   627                           ;	WDTE = OFF, WDT disabled
   628                           ;	Power-up Timer Enable bit
   629                           ;	PWRTE = ON, PWRT enabled
   630                           ;	MCLR Pin Function Select bit
   631                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   632                           ;	Code Protection bit
   633                           ;	CP = ON, Program memory code protection is enabled
   634                           ;	Low-Voltage Programming Enable
   635                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   636                           ;	Brown-out Reset Selection bits
   637                           ;	LPBOR = ON, BOR enabled
   638                           ;	Brown-out Reset Voltage Selection
   639                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
   640                           ;	Flash Memory Self-Write Protection
   641                           ;	WRT = ALL, 000h to 1FFh write protected, no addresses may be modified by PMCON control
   642  2007                     	org	8199
   643  2007  2206               	dw	8710

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6      13

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _tmr2Int in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _tmr2Int in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 BANK0      3     3      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _tmr2Int                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _tmr2Int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK0               3E      6       D       3       21.0%
BITBANK0            3E      0       0       6        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D       5        0.0%
ABS                  0      0       D       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 01 11:01:31 2021

                     l56 008A                       u57 0024                       u67 0035  
                     u77 0046                       u87 0057                      l620 0084  
                    l622 0086                      l614 007D                      l630 0018  
                    l624 0088                      l616 007F                      l640 002F  
                    l632 0019                      l626 0089                      l618 0080  
                    l642 003C                      l634 001A                      l644 0040  
                    l636 001E                      l646 004D                      l638 002B  
                    l648 0051                      _GIE 005F                      _RA2 002A  
                    _PR2 0012               _PWM_period 004C                     _PEIE 005E  
                   i1l34 0073                     i1l35 0074         _NoCommandCounter 0046  
                   _WPUA 0009                     u3_20 006A                     u3_21 0069  
                   u4_20 0072                     u4_21 0071                     _main 0018  
                   _init 007D                     btemp 007E              _PWM_counter 004A  
                   start 000C                    ?_main 0040                    ?_init 0040  
                  _T2CON 0013                    i1l650 0060                    i1l660 0072  
                  i1l652 0064                    i1l654 006A                    i1l656 006B  
                  i1l658 006C                    _PORTA 0005                    _TRISA 0006  
        __end_of_tmr2Int 007D                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000D             __end_of_main 0060  
           __end_of_init 008B                   ??_main 0043                   ??_init 0000  
                 _ANSELA 0008                   _OSCCON 0010                   _TMR2IE 0069  
                 _TMR2IF 0061                ??_tmr2Int 0040                   saved_w 007E  
__end_of__initialization 0016           __pcstackCOMMON 0000             __pidataBANK0 008B  
             __pbssBANK0 0046               __pmaintext 0018               __pintentry 0004  
                __ptext1 007D                  __ptext2 0060                  _tmr2Int 0060  
   end_of_initialization 0016      start_initialization 000D              __pdataBANK0 004B  
              ___latbits 0000            __pcstackBANK0 0040                 ?_tmr2Int 0040  
      interrupt_function 0004                 _PWM_high 004B         __size_of_tmr2Int 001D  
          __size_of_main 0048            __size_of_init 000E             _time_counter 0048  
               intlevel1 0000  
