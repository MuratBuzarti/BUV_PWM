

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 01 22:56:49 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 29/04/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC10F322 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0020                     	;# 
    86  0020                     	;# 
    87  0021                     	;# 
    88  0022                     	;# 
    89  0022                     	;# 
    90  0023                     	;# 
    91  0024                     	;# 
    92  0025                     	;# 
    93  0026                     	;# 
    94  0027                     	;# 
    95  0027                     	;# 
    96  0028                     	;# 
    97  0029                     	;# 
    98  002A                     	;# 
    99  002A                     	;# 
   100  002B                     	;# 
   101  002C                     	;# 
   102  002D                     	;# 
   103  002E                     	;# 
   104  0030                     	;# 
   105  0031                     	;# 
   106  0032                     	;# 
   107  0033                     	;# 
   108  0034                     	;# 
   109  0035                     	;# 
   110  0036                     	;# 
   111  0037                     	;# 
   112  0038                     	;# 
   113  0039                     	;# 
   114  003A                     	;# 
   115  003B                     	;# 
   116  003C                     	;# 
   117  003D                     	;# 
   118  003E                     	;# 
   119  003F                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0020                     	;# 
   155  0020                     	;# 
   156  0021                     	;# 
   157  0022                     	;# 
   158  0022                     	;# 
   159  0023                     	;# 
   160  0024                     	;# 
   161  0025                     	;# 
   162  0026                     	;# 
   163  0027                     	;# 
   164  0027                     	;# 
   165  0028                     	;# 
   166  0029                     	;# 
   167  002A                     	;# 
   168  002A                     	;# 
   169  002B                     	;# 
   170  002C                     	;# 
   171  002D                     	;# 
   172  002E                     	;# 
   173  0030                     	;# 
   174  0031                     	;# 
   175  0032                     	;# 
   176  0033                     	;# 
   177  0034                     	;# 
   178  0035                     	;# 
   179  0036                     	;# 
   180  0037                     	;# 
   181  0038                     	;# 
   182  0039                     	;# 
   183  003A                     	;# 
   184  003B                     	;# 
   185  003C                     	;# 
   186  003D                     	;# 
   187  003E                     	;# 
   188  003F                     	;# 
   189                           
   190                           	psect	idataBANK0
   191  00BB                     __pidataBANK0:
   192                           
   193                           ;initializer for _PWM_period
   194  00BB  3419               	retlw	25
   195  0013                     _T2CON	set	19
   196  0012                     _PR2	set	18
   197  0009                     _WPUA	set	9
   198  0008                     _ANSELA	set	8
   199  0006                     _TRISA	set	6
   200  0005                     _PORTA	set	5
   201  0010                     _OSCCON	set	16
   202  0069                     _TMR2IE	set	105
   203  005E                     _PEIE	set	94
   204  0061                     _TMR2IF	set	97
   205  002A                     _RA2	set	42
   206  0028                     _RA0	set	40
   207  0029                     _RA1	set	41
   208  002B                     _RA3	set	43
   209  005F                     _GIE	set	95
   210                           
   211                           	psect	cinit
   212  000D                     start_initialization:	
   213                           ; #config settings
   214                           
   215  000D                     __initialization:
   216                           
   217                           ; Initialize objects allocated to BANK0
   218  000D  20BB               	fcall	__pidataBANK0	;fetch initializer
   219  000E  00CD               	movwf	__pdataBANK0& (0+127)
   220                           
   221                           ; Clear objects allocated to BANK0
   222  000F  01C0               	clrf	__pbssBANK0& (0+127)
   223  0010  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   224  0011  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   225  0012  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   226  0013  01C4               	clrf	(__pbssBANK0+4)& (0+127)
   227  0014  01C5               	clrf	(__pbssBANK0+5)& (0+127)
   228  0015  01C6               	clrf	(__pbssBANK0+6)& (0+127)
   229  0016                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232  0016                     __end_of__initialization:
   233  0016  0183               	clrf	3
   234  0017  2818               	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bssBANK0
   237  0040                     __pbssBANK0:
   238  0040                     _NoCommandCounter:
   239  0040                     	ds	2
   240  0042                     _time_counter:
   241  0042                     	ds	2
   242  0044                     _PWM_set:
   243  0044                     	ds	1
   244  0045                     _PWM_counter:
   245  0045                     	ds	1
   246  0046                     _PWM_high:
   247  0046                     	ds	1
   248                           
   249                           	psect	dataBANK0
   250  004D                     __pdataBANK0:
   251  004D                     _PWM_period:
   252  004D                     	ds	1
   253                           
   254                           	psect	cstackCOMMON
   255  0000                     __pcstackCOMMON:
   256  0000                     ??_init:
   257                           
   258                           	psect	cstackBANK0
   259  0047                     __pcstackBANK0:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0047                     ?_init:
   263  0047                     ?_main:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0047                     ?_tmr2Int:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0047                     ??_tmr2Int:	
   270                           ; 1 bytes @ 0x0
   271                           
   272                           
   273                           ; 1 bytes @ 0x0
   274  0047                     	ds	3
   275  004A                     ??_main:
   276                           
   277                           ; 1 bytes @ 0x3
   278  004A                     	ds	3
   279                           
   280                           	psect	maintext
   281  0018                     __pmaintext:	
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 28 in file "main.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0
   301 ;;      Params:         0       0
   302 ;;      Locals:         0       0
   303 ;;      Temps:          0       3
   304 ;;      Totals:         0       3
   305 ;;Total ram usage:        3 bytes
   306 ;; Hardware stack levels required when called:    2
   307 ;; This function calls:
   308 ;;		_init
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           
   315                           ;psect for function _main
   316  0018                     _main:
   317  0018                     l673:	
   318                           ;incstack = 0
   319                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   320                           
   321                           
   322                           ;main.c: 30:     init();
   323  0018  20AD               	fcall	_init
   324  0019                     l675:
   325                           
   326                           ;main.c: 31:     GIE = 1;
   327  0019  178B               	bsf	11,7	;volatile
   328  001A                     l677:
   329                           
   330                           ;main.c: 34:     {;main.c: 46:         _delay((unsigned long)((500)*(8000000/4000000.0))
      +                          );
   331  001A  30C7               	movlw	199
   332  001B  00CA               	movwf	??_main
   333  001C                     u237:
   334  001C  281D               	nop2
   335  001D  0BCA               	decfsz	??_main,f
   336  001E  281C               	goto	u237
   337  001F  2820               	nop2
   338  0020  2821               	nop2
   339  0021                     l679:
   340                           
   341                           ;main.c: 48:         if(PWM_high<PWM_set)
   342  0021  0844               	movf	_PWM_set,w
   343  0022  0246               	subwf	_PWM_high,w
   344  0023  1803               	skipnc
   345  0024  2826               	goto	u121
   346  0025  2827               	goto	u120
   347  0026                     u121:
   348  0026  2838               	goto	l685
   349  0027                     u120:
   350  0027                     l681:
   351                           
   352                           ;main.c: 49:         {;main.c: 50:             _delay((unsigned long)((500)*(8000000/400
      +                          0.0)));
   353  0027  3006               	movlw	6
   354  0028  00CC               	movwf	??_main+2
   355  0029  3013               	movlw	19
   356  002A  00CB               	movwf	??_main+1
   357  002B  30AD               	movlw	173
   358  002C  00CA               	movwf	??_main
   359  002D                     u247:
   360  002D  0BCA               	decfsz	??_main,f
   361  002E  282D               	goto	u247
   362  002F  0BCB               	decfsz	??_main+1,f
   363  0030  282D               	goto	u247
   364  0031  0BCC               	decfsz	??_main+2,f
   365  0032  282D               	goto	u247
   366  0033  2834               	nop2
   367  0034                     l683:
   368                           
   369                           ;main.c: 51:             PWM_high++;
   370  0034  3001               	movlw	1
   371  0035  00FF               	movwf	btemp+1
   372  0036  087F               	movf	btemp+1,w
   373  0037  07C6               	addwf	_PWM_high,f
   374  0038                     l685:
   375                           
   376                           ;main.c: 54:         if(PWM_high>PWM_set)
   377  0038  0846               	movf	_PWM_high,w
   378  0039  0244               	subwf	_PWM_set,w
   379  003A  1803               	skipnc
   380  003B  283D               	goto	u131
   381  003C  283E               	goto	u130
   382  003D                     u131:
   383  003D  284D               	goto	l691
   384  003E                     u130:
   385  003E                     l687:
   386                           
   387                           ;main.c: 55:         {;main.c: 56:             _delay((unsigned long)((500)*(8000000/400
      +                          0.0)));
   388  003E  3006               	movlw	6
   389  003F  00CC               	movwf	??_main+2
   390  0040  3013               	movlw	19
   391  0041  00CB               	movwf	??_main+1
   392  0042  30AD               	movlw	173
   393  0043  00CA               	movwf	??_main
   394  0044                     u257:
   395  0044  0BCA               	decfsz	??_main,f
   396  0045  2844               	goto	u257
   397  0046  0BCB               	decfsz	??_main+1,f
   398  0047  2844               	goto	u257
   399  0048  0BCC               	decfsz	??_main+2,f
   400  0049  2844               	goto	u257
   401  004A  284B               	nop2
   402  004B                     l689:
   403                           
   404                           ;main.c: 57:             PWM_high--;
   405  004B  3001               	movlw	1
   406  004C  02C6               	subwf	_PWM_high,f
   407  004D                     l691:
   408                           
   409                           ;main.c: 61:         if (RA3 == 0) {
   410  004D  1985               	btfsc	5,3	;volatile
   411  004E  2850               	goto	u141
   412  004F  2851               	goto	u140
   413  0050                     u141:
   414  0050  2857               	goto	l697
   415  0051                     u140:
   416  0051                     l693:
   417                           
   418                           ;main.c: 62:             PWM_set = 12;
   419  0051  300C               	movlw	12
   420  0052  00FF               	movwf	btemp+1
   421  0053  087F               	movf	btemp+1,w
   422  0054  00C4               	movwf	_PWM_set
   423  0055                     l695:
   424                           
   425                           ;main.c: 63:             NoCommandCounter = 0;
   426  0055  01C0               	clrf	_NoCommandCounter
   427  0056  01C1               	clrf	_NoCommandCounter+1
   428  0057                     l697:
   429                           
   430                           ;main.c: 66:         if (RA1 == 0) {
   431  0057  1885               	btfsc	5,1	;volatile
   432  0058  285A               	goto	u151
   433  0059  285B               	goto	u150
   434  005A                     u151:
   435  005A  2861               	goto	l703
   436  005B                     u150:
   437  005B                     l699:
   438                           
   439                           ;main.c: 67:             PWM_set = 8;
   440  005B  3008               	movlw	8
   441  005C  00FF               	movwf	btemp+1
   442  005D  087F               	movf	btemp+1,w
   443  005E  00C4               	movwf	_PWM_set
   444  005F                     l701:
   445                           
   446                           ;main.c: 68:             NoCommandCounter = 0;
   447  005F  01C0               	clrf	_NoCommandCounter
   448  0060  01C1               	clrf	_NoCommandCounter+1
   449  0061                     l703:
   450                           
   451                           ;main.c: 71:         if (RA0 == 0) {
   452  0061  1805               	btfsc	5,0	;volatile
   453  0062  2864               	goto	u161
   454  0063  2865               	goto	u160
   455  0064                     u161:
   456  0064  286B               	goto	l709
   457  0065                     u160:
   458  0065                     l705:
   459                           
   460                           ;main.c: 72:             PWM_set = 3;
   461  0065  3003               	movlw	3
   462  0066  00FF               	movwf	btemp+1
   463  0067  087F               	movf	btemp+1,w
   464  0068  00C4               	movwf	_PWM_set
   465  0069                     l707:
   466                           
   467                           ;main.c: 73:             NoCommandCounter = 0;
   468  0069  01C0               	clrf	_NoCommandCounter
   469  006A  01C1               	clrf	_NoCommandCounter+1
   470  006B                     l709:
   471                           
   472                           ;main.c: 77:         if ((RA3==1)&&(RA1==1)&&(RA0==1))
   473  006B  1D85               	btfss	5,3	;volatile
   474  006C  286E               	goto	u171
   475  006D  286F               	goto	u170
   476  006E                     u171:
   477  006E  281A               	goto	l677
   478  006F                     u170:
   479  006F                     l711:
   480  006F  1C85               	btfss	5,1	;volatile
   481  0070  2872               	goto	u181
   482  0071  2873               	goto	u180
   483  0072                     u181:
   484  0072  281A               	goto	l677
   485  0073                     u180:
   486  0073                     l713:
   487  0073  1C05               	btfss	5,0	;volatile
   488  0074  2876               	goto	u191
   489  0075  2877               	goto	u190
   490  0076                     u191:
   491  0076  281A               	goto	l677
   492  0077                     u190:
   493  0077                     l715:
   494                           
   495                           ;main.c: 78:         {;main.c: 79:             NoCommandCounter++;
   496  0077  3001               	movlw	1
   497  0078  07C0               	addwf	_NoCommandCounter,f
   498  0079  1803               	skipnc
   499  007A  0AC1               	incf	_NoCommandCounter+1,f
   500  007B  3000               	movlw	0
   501  007C  07C1               	addwf	_NoCommandCounter+1,f
   502                           
   503                           ;main.c: 80:             if (NoCommandCounter>=1000)
   504  007D  3003               	movlw	3
   505  007E  0241               	subwf	_NoCommandCounter+1,w
   506  007F  30E8               	movlw	232
   507  0080  1903               	skipnz
   508  0081  0240               	subwf	_NoCommandCounter,w
   509  0082  1C03               	skipc
   510  0083  2885               	goto	u201
   511  0084  2886               	goto	u200
   512  0085                     u201:
   513  0085  281A               	goto	l677
   514  0086                     u200:
   515  0086                     l717:
   516                           
   517                           ;main.c: 81:             {;main.c: 82:                 PWM_set = PWM_period;
   518  0086  084D               	movf	_PWM_period,w
   519  0087  00FF               	movwf	btemp+1
   520  0088  087F               	movf	btemp+1,w
   521  0089  00C4               	movwf	_PWM_set
   522  008A                     l719:
   523                           
   524                           ;main.c: 83:                 NoCommandCounter=1000;
   525  008A  30E8               	movlw	232
   526  008B  00C0               	movwf	_NoCommandCounter
   527  008C  3003               	movlw	3
   528  008D  00C1               	movwf	_NoCommandCounter+1
   529  008E  281A               	goto	l677
   530  008F  280C               	ljmp	start
   531  0090                     __end_of_main:
   532                           
   533                           	psect	text1
   534  00AD                     __ptext1:	
   535 ;; *************** function _init *****************
   536 ;; Defined at:
   537 ;;		line 13 in file "functions.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, status,2
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0
   551 ;;      Params:         0       0
   552 ;;      Locals:         0       0
   553 ;;      Temps:          0       0
   554 ;;      Totals:         0       0
   555 ;;Total ram usage:        0 bytes
   556 ;; Hardware stack levels used:    1
   557 ;; Hardware stack levels required when called:    1
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           
   566                           ;psect for function _init
   567  00AD                     _init:
   568  00AD                     l657:	
   569                           ;incstack = 0
   570                           ; Regs used in _init: [wreg+status,2]
   571                           
   572                           
   573                           ;functions.c: 16:     OSCCON=0b01100000;
   574  00AD  3060               	movlw	96
   575  00AE  0090               	movwf	16	;volatile
   576  00AF                     l659:
   577                           
   578                           ;functions.c: 19:     PORTA=0;
   579  00AF  0185               	clrf	5	;volatile
   580  00B0                     l661:
   581                           
   582                           ;functions.c: 20:     TRISA=0b00001011;
   583  00B0  300B               	movlw	11
   584  00B1  0086               	movwf	6	;volatile
   585                           
   586                           ;functions.c: 21:     ANSELA=0;
   587  00B2  0188               	clrf	8	;volatile
   588                           
   589                           ;functions.c: 22:     WPUA=0;
   590  00B3  0189               	clrf	9	;volatile
   591  00B4                     l663:
   592                           
   593                           ;functions.c: 25:     PR2=50;
   594  00B4  3032               	movlw	50
   595  00B5  0092               	movwf	18	;volatile
   596  00B6                     l665:
   597                           
   598                           ;functions.c: 26:     T2CON=0b00000100;
   599  00B6  3004               	movlw	4
   600  00B7  0093               	movwf	19	;volatile
   601  00B8                     l667:
   602                           
   603                           ;functions.c: 29:     PEIE=1;
   604  00B8  170B               	bsf	11,6	;volatile
   605  00B9                     l669:
   606                           
   607                           ;functions.c: 30:     TMR2IE=1;
   608  00B9  148D               	bsf	13,1	;volatile
   609  00BA                     l71:
   610  00BA  0008               	return
   611  00BB                     __end_of_init:
   612                           
   613                           	psect	text2
   614  0090                     __ptext2:	
   615 ;; *************** function _tmr2Int *****************
   616 ;; Defined at:
   617 ;;		line 93 in file "main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0, btemp+1
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0
   631 ;;      Params:         0       0
   632 ;;      Locals:         0       0
   633 ;;      Temps:          0       3
   634 ;;      Totals:         0       3
   635 ;;Total ram usage:        3 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		Interrupt level 1
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _tmr2Int
   646  0090                     _tmr2Int:
   647  0090                     i1l721:
   648                           
   649                           ;main.c: 95:     PWM_counter++;
   650  0090  3001               	movlw	1
   651  0091  00FF               	movwf	btemp+1
   652  0092  087F               	movf	btemp+1,w
   653  0093  07C5               	addwf	_PWM_counter,f
   654  0094                     i1l723:
   655                           
   656                           ;main.c: 97:     if(PWM_counter>=PWM_period)
   657  0094  084D               	movf	_PWM_period,w
   658  0095  0245               	subwf	_PWM_counter,w
   659  0096  1C03               	skipc
   660  0097  2899               	goto	u21_21
   661  0098  289A               	goto	u21_20
   662  0099                     u21_21:
   663  0099  289C               	goto	i1l729
   664  009A                     u21_20:
   665  009A                     i1l725:
   666                           
   667                           ;main.c: 98:     {;main.c: 99:         RA2=1;
   668  009A  1505               	bsf	5,2	;volatile
   669  009B                     i1l727:
   670                           
   671                           ;main.c: 100:         PWM_counter=0;
   672  009B  01C5               	clrf	_PWM_counter
   673  009C                     i1l729:
   674                           
   675                           ;main.c: 103:     if(PWM_counter>=PWM_high)
   676  009C  0846               	movf	_PWM_high,w
   677  009D  0245               	subwf	_PWM_counter,w
   678  009E  1C03               	skipc
   679  009F  28A1               	goto	u22_21
   680  00A0  28A2               	goto	u22_20
   681  00A1                     u22_21:
   682  00A1  28A3               	goto	i1l49
   683  00A2                     u22_20:
   684  00A2                     i1l731:
   685                           
   686                           ;main.c: 104:     {;main.c: 105:         RA2=0;
   687  00A2  1105               	bcf	5,2	;volatile
   688  00A3                     i1l49:	
   689                           ;main.c: 106:     }
   690                           
   691                           
   692                           ;main.c: 108:     TMR2IF=0;
   693  00A3  108C               	bcf	12,1	;volatile
   694  00A4                     i1l50:	
   695                           ;main.c: 109:     return;
   696                           
   697  00A4  0849               	movf	??_tmr2Int+2,w
   698  00A5  00FF               	movwf	btemp+1
   699  00A6  0848               	movf	??_tmr2Int+1,w
   700  00A7  008A               	movwf	10
   701  00A8  0E47               	swapf	??_tmr2Int^0,w
   702  00A9  0083               	movwf	3
   703  00AA  0EFE               	swapf	btemp,f
   704  00AB  0E7E               	swapf	btemp,w
   705  00AC  0009               	retfie
   706  00AD                     __end_of_tmr2Int:
   707  007E                     btemp	set	126	;btemp
   708  007E                     wtemp0	set	126
   709                           
   710                           	psect	intentry
   711  0004                     __pintentry:	
   712                           ;incstack = 0
   713                           ; Regs used in _tmr2Int: [wreg+status,2+status,0+btemp+1]
   714                           
   715  0004                     interrupt_function:
   716  007E                     saved_w	set	btemp
   717  0004  00FE               	movwf	btemp
   718  0005  0E03               	swapf	3,w
   719  0006  00C7               	movwf	??_tmr2Int
   720  0007  080A               	movf	10,w
   721  0008  00C8               	movwf	??_tmr2Int+1
   722  0009  087F               	movf	btemp+1,w
   723  000A  00C9               	movwf	??_tmr2Int+2
   724  000B  2890               	ljmp	_tmr2Int
   725                           
   726                           	psect	config
   727                           
   728                           ;Config register CONFIG @ 0x2007
   729                           ;	Oscillator Selection bits
   730                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
   731                           ;	Brown-out Reset Enable
   732                           ;	BOREN = ON, Brown-out Reset enabled
   733                           ;	Watchdog Timer Enable
   734                           ;	WDTE = OFF, WDT disabled
   735                           ;	Power-up Timer Enable bit
   736                           ;	PWRTE = ON, PWRT enabled
   737                           ;	MCLR Pin Function Select bit
   738                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   739                           ;	Code Protection bit
   740                           ;	CP = ON, Program memory code protection is enabled
   741                           ;	Low-Voltage Programming Enable
   742                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   743                           ;	Brown-out Reset Selection bits
   744                           ;	LPBOR = ON, BOR enabled
   745                           ;	Brown-out Reset Voltage Selection
   746                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
   747                           ;	Flash Memory Self-Write Protection
   748                           ;	WRT = ALL, 000h to 1FFh write protected, no addresses may be modified by PMCON control
   749  2007                     	org	8199
   750  2007  2206               	dw	8710

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _tmr2Int in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _tmr2Int in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 BANK0      3     3      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _tmr2Int                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _tmr2Int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK0               3E      6       E       3       22.6%
BITBANK0            3E      0       0       6        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E       5        0.0%
ABS                  0      0       E       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 01 22:56:49 2021

                     l71 00BA                      l701 005F                      l711 006F  
                    l703 0061                      l713 0073                      l705 0065  
                    l715 0077                      l707 0069                      l661 00B0  
                    l717 0086                      l709 006B                      l663 00B4  
                    l719 008A                      l665 00B6                      l657 00AD  
                    l681 0027                      l673 0018                      l667 00B8  
                    l659 00AF                      l691 004D                      l683 0034  
                    l675 0019                      l669 00B9                      l693 0051  
                    l685 0038                      l677 001A                      l695 0055  
                    l687 003E                      l679 0021                      l697 0057  
                    l689 004B                      l699 005B                      _GIE 005F  
                    _RA0 0028                      _RA1 0029                      _RA2 002A  
                    _RA3 002B                      u200 0086                      u120 0027  
                    u201 0085                      u121 0026                      u130 003E  
                    u131 003D                      u140 0051                      u141 0050  
                    u150 005B                      u151 005A                      u160 0065  
                    u161 0064                      u170 006F                      u171 006E  
                    u180 0073                      u181 0072                      u237 001C  
                    u190 0077                      _PR2 0012                      u191 0076  
                    u247 002D                      u257 0044               _PWM_period 004D  
                   _PEIE 005E                     i1l50 00A4                     i1l49 00A3  
       _NoCommandCounter 0040                     _WPUA 0009                     _main 0018  
                   _init 00AD                     btemp 007E              _PWM_counter 0045  
                   start 000C                    ?_main 0047                    ?_init 0047  
                  _T2CON 0013                    i1l721 0090                    i1l731 00A2  
                  i1l723 0094                    i1l725 009A                    i1l727 009B  
                  i1l729 009C                    u21_20 009A                    u21_21 0099  
                  u22_20 00A2                    u22_21 00A1                    _PORTA 0005  
                  _TRISA 0006          __end_of_tmr2Int 00AD                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 0090             __end_of_init 00BB                   ??_main 004A  
                 ??_init 0000                   _ANSELA 0008                   _OSCCON 0010  
                 _TMR2IE 0069                   _TMR2IF 0061                ??_tmr2Int 0047  
                 saved_w 007E  __end_of__initialization 0016           __pcstackCOMMON 0000  
           __pidataBANK0 00BB               __pbssBANK0 0040               __pmaintext 0018  
             __pintentry 0004                  _PWM_set 0044                  __ptext1 00AD  
                __ptext2 0090                  _tmr2Int 0090     end_of_initialization 0016  
    start_initialization 000D              __pdataBANK0 004D                ___latbits 0000  
          __pcstackBANK0 0047                 ?_tmr2Int 0047        interrupt_function 0004  
               _PWM_high 0046         __size_of_tmr2Int 001D            __size_of_main 0078  
          __size_of_init 000E             _time_counter 0042                 intlevel1 0000  
